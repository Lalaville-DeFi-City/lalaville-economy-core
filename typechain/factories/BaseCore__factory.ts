/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseCore, BaseCoreInterface } from "../BaseCore";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "performer",
        type: "address",
      },
    ],
    name: "BuildContractConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "busyBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "setBusy",
        type: "bool",
      },
    ],
    name: "BuildContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "performer",
        type: "address",
      },
    ],
    name: "BuildContractDeclined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newBuilder",
        type: "address",
      },
    ],
    name: "BuilderChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "DepositSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "performer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardBuilder",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBorrowPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "random",
    outputs: [
      {
        internalType: "uint256",
        name: "rand",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "uintToString",
    outputs: [
      {
        internalType: "bytes32",
        name: "ret",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bc1806100206000396000f3fe6080604052600436106100705760003560e01c80639201de551161004e5780639201de5514610108578063b6b55f2514610145578063ce606ee014610161578063e93956791461018c57610070565b806327e235e314610075578063516de6c2146100b25780635ec01e4d146100dd575b600080fd5b34801561008157600080fd5b5061009c600480360381019061009791906106ec565b6101c9565b6040516100a991906108ab565b60405180910390f35b3480156100be57600080fd5b506100c76101e1565b6040516100d491906108ab565b60405180910390f35b3480156100e957600080fd5b506100f2610255565b6040516100ff91906108ab565b60405180910390f35b34801561011457600080fd5b5061012f600480360381019061012a9190610715565b610288565b60405161013c9190610869565b60405180910390f35b61015f600480360381019061015a919061073e565b6104e1565b005b34801561016d57600080fd5b506101766105d2565b6040516101839190610833565b60405180910390f35b34801561019857600080fd5b506101b360048036038101906101ae919061073e565b6105f6565b6040516101c0919061084e565b60405180910390f35b60016020528060005260406000206000915090505481565b60006003600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102509190610938565b905090565b6000444260405160200161026a929190610807565b6040516020818303038152906040528051906020012060001c905090565b606060005b60208160ff161080156103055750600060f81b838260ff16602081106102dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561031d57808061031590610a49565b91505061028d565b60008160ff1667ffffffffffffffff811115610362577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156103945781602001600182028036833780820191505090505b509050600091505b60208260ff161080156104145750600060f81b848360ff16602081106103eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b156104d757838260ff1660208110610455577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b818360ff1681518110610495577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535081806104cf90610a49565b92505061039c565b8092505050919050565b662386f26fc1000034101561052b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105229061088b565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461057a91906108e2565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f60bbf3f279de4eb569cec9565dbd645a7d269bef7d4b20083d8da32ddd6e9460346040516105c791906108ab565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821415610628577f300000000000000000000000000000000000000000000000000000000000000090506106a8565b5b60008211156106a7576101008160001c6106439190610938565b60001b90507f01000000000000000000000000000000000000000000000000000000000000006030600a846106789190610a7d565b61068291906108e2565b61068c9190610969565b60001b81179050600a826106a09190610938565b9150610629565b5b919050565b6000813590506106bc81610b46565b92915050565b6000813590506106d181610b5d565b92915050565b6000813590506106e681610b74565b92915050565b6000602082840312156106fe57600080fd5b600061070c848285016106ad565b91505092915050565b60006020828403121561072757600080fd5b6000610735848285016106c2565b91505092915050565b60006020828403121561075057600080fd5b600061075e848285016106d7565b91505092915050565b610770816109c3565b82525050565b61077f816109d5565b82525050565b6000610790826108c6565b61079a81856108d1565b93506107aa818560208601610a16565b6107b381610b0c565b840191505092915050565b60006107cb6011836108d1565b91506107d682610b1d565b602082019050919050565b6107ea816109ff565b82525050565b6108016107fc826109ff565b610a73565b82525050565b600061081382856107f0565b60208201915061082382846107f0565b6020820191508190509392505050565b60006020820190506108486000830184610767565b92915050565b60006020820190506108636000830184610776565b92915050565b600060208201905081810360008301526108838184610785565b905092915050565b600060208201905081810360008301526108a4816107be565b9050919050565b60006020820190506108c060008301846107e1565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108ed826109ff565b91506108f8836109ff565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561092d5761092c610aae565b5b828201905092915050565b6000610943826109ff565b915061094e836109ff565b92508261095e5761095d610add565b5b828204905092915050565b6000610974826109ff565b915061097f836109ff565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109b8576109b7610aae565b5b828202905092915050565b60006109ce826109df565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610a34578082015181840152602081019050610a19565b83811115610a43576000848401525b50505050565b6000610a5482610a09565b915060ff821415610a6857610a67610aae565b5b600182019050919050565b6000819050919050565b6000610a88826109ff565b9150610a93836109ff565b925082610aa357610aa2610add565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f7568742066756e64732e000000000000000000000000000000600082015250565b610b4f816109c3565b8114610b5a57600080fd5b50565b610b66816109d5565b8114610b7157600080fd5b50565b610b7d816109ff565b8114610b8857600080fd5b5056fea26469706673582212204db43ff2e3b73afd25e6e219301553ef9352115bdc78e77be6a37213e5007c6864736f6c63430008040033";

export class BaseCore__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseCore> {
    return super.deploy(overrides || {}) as Promise<BaseCore>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseCore {
    return super.attach(address) as BaseCore;
  }
  connect(signer: Signer): BaseCore__factory {
    return super.connect(signer) as BaseCore__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseCoreInterface {
    return new utils.Interface(_abi) as BaseCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseCore {
    return new Contract(address, _abi, signerOrProvider) as BaseCore;
  }
}
