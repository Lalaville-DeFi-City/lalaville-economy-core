/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LaLaVilleEconomyToken,
  LaLaVilleEconomyTokenInterface,
} from "../LaLaVilleEconomyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "performer",
        type: "address",
      },
    ],
    name: "BuildContractConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "busyBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "setBusy",
        type: "bool",
      },
    ],
    name: "BuildContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "performer",
        type: "address",
      },
    ],
    name: "BuildContractDeclined",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "contractId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newBuilder",
        type: "address",
      },
    ],
    name: "BuilderChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "DepositSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "performer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardBuilder",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_TOKENS_SUPPLY_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "buildContractRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "buildContracts",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "enum Constants.BuildContractStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "performer",
        type: "address",
      },
      {
        internalType: "address",
        name: "customer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "busyBuilders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytes32",
        type: "bytes32",
      },
    ],
    name: "bytes32ToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
    ],
    name: "getContractById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "enum Constants.BuildContractStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "performer",
            type: "address",
          },
          {
            internalType: "address",
            name: "customer",
            type: "address",
          },
        ],
        internalType: "struct Constants.BuildContract",
        name: "_contr",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBorrowPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "random",
    outputs: [
      {
        internalType: "uint256",
        name: "rand",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "accept",
        type: "bool",
      },
    ],
    name: "replyContractRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rewardTokens",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "performer",
        type: "address",
      },
    ],
    name: "requestContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "contractId",
        type: "bytes32",
      },
    ],
    name: "rewardBuilder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "v",
        type: "uint256",
      },
    ],
    name: "uintToString",
    outputs: [
      {
        internalType: "bytes32",
        name: "ret",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027b6380380620027b683398181016040528101906200003791906200013d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612710600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001b7565b60008151905062000137816200019d565b92915050565b6000602082840312156200015057600080fd5b6000620001608482850162000126565b91505092915050565b600062000176826200017d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001a88162000169565b8114620001b457600080fd5b50565b6125ef80620001c76000396000f3fe6080604052600436106100fe5760003560e01c8063a9c9a91811610095578063c5d0633911610064578063c5d0633914610375578063ce606ee01461039e578063e9395679146103c9578063edebe79814610406578063f652fba91461042f576100fe565b8063a9c9a918146102b6578063b6b55f25146102f3578063b78b52df1461030f578063c016a7bc14610338576100fe565b80638421fc2c116100d15780638421fc2c146101d35780638fea86bd146102135780639201de551461023c578063925a9f4b14610279576100fe565b806327e235e314610103578063516de6c2146101405780635ec01e4d1461016b57806370a0823114610196575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190611af3565b61045a565b60405161013791906120b6565b60405180910390f35b34801561014c57600080fd5b50610155610472565b60405161016291906120b6565b60405180910390f35b34801561017757600080fd5b506101806104e6565b60405161018d91906120b6565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190611af3565b610519565b6040516101ca91906120b6565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f59190611b58565b610562565b60405161020a94939291906120d1565b60405180910390f35b34801561021f57600080fd5b5061023a60048036038101906102359190611be6565b6105df565b005b34801561024857600080fd5b50610263600480360381019061025e9190611b58565b6109d5565b6040516102709190611efd565b60405180910390f35b34801561028557600080fd5b506102a0600480360381019061029b9190611af3565b610c2e565b6040516102ad9190611ec7565b60405180910390f35b3480156102c257600080fd5b506102dd60048036038101906102d89190611b58565b610c4e565b6040516102ea919061209b565b60405180910390f35b61030d60048036038101906103089190611bbd565b610db8565b005b34801561031b57600080fd5b5061033660048036038101906103319190611b1c565b610ea9565b005b34801561034457600080fd5b5061035f600480360381019061035a9190611af3565b6110ac565b60405161036c91906120b6565b60405180910390f35b34801561038157600080fd5b5061039c60048036038101906103979190611b58565b6110c4565b005b3480156103aa57600080fd5b506103b36114b6565b6040516103c09190611e83565b60405180910390f35b3480156103d557600080fd5b506103f060048036038101906103eb9190611bbd565b6114da565b6040516103fd9190611ee2565b60405180910390f35b34801561041257600080fd5b5061042d60048036038101906104289190611b81565b611591565b005b34801561043b57600080fd5b506104446118f7565b60405161045191906120b6565b60405180910390f35b60016020528060005260406000206000915090505481565b60006003600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104e19190612188565b905090565b600044426040516020016104fb929190611e57565b6040516020818303038152906040528051906020012060001c905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60008211610622576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106199061203b565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b9061205b565b60405180910390fd5b60011515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072f9061201b565b60405180910390fd5b6107438233836118fd565b60006107556107506104e6565b6114da565b90506001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506040518060800160405280848152602001600160048111156107fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020018373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff021916908360048111156108a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506000610944826109d5565b90507f73f1c2ae3da11c14be5e6414e43f6831eac3ac9cef622b549b7ec077898b4a24813385600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166040516109c79493929190611f4f565b60405180910390a150505050565b606060005b60208160ff16108015610a525750600060f81b838260ff1660208110610a29577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15610a6a578080610a62906122fe565b9150506109da565b60008160ff1667ffffffffffffffff811115610aaf577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ae15781602001600182028036833780820191505090505b509050600091505b60208260ff16108015610b615750600060f81b848360ff1660208110610b38577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b15610c2457838260ff1660208110610ba2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b818360ff1681518110610be2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508180610c1c906122fe565b925050610ae9565b8092505050919050565b60026020528060005260406000206000915054906101000a900460ff1681565b610c56611a13565b60036000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900460ff166004811115610cc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115610d01577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b662386f26fc10000341015610e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df99061205b565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e519190612132565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f60bbf3f279de4eb569cec9565dbd645a7d269bef7d4b20083d8da32ddd6e946034604051610e9e91906120b6565b60405180910390a250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3090611ffb565b60405180910390fd5b80600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610fdb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd29061207b565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461102a9190612132565b9250508190555080600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110a19190612213565b925050819055505050565b60046020528060005260406000206000915090505481565b600060036000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900460ff166004811115611139577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811115611171577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126190611fdb565b60405180910390fd5b806060015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d390611fbb565b60405180910390fd5b60028160200190600481111561131b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90816004811115611355577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525050600060026000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806000015160016000836060015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461140c9190612213565b92505081905550806000015160016000836040015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461146a9190612132565b925050819055507fd44f7f7d42856dbe65bfe089dd47ece91b7c8e5e248c8f25c99f4801dd847505816040015182600001516040516114aa929190611e9e565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008082141561150c577f3000000000000000000000000000000000000000000000000000000000000000905061158c565b5b600082111561158b576101008160001c6115279190612188565b60001b90507f01000000000000000000000000000000000000000000000000000000000000006030600a8461155c9190612332565b6115669190612132565b61157091906121b9565b60001b81179050600a826115849190612188565b915061150d565b5b919050565b600060036000848152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900460ff166004811115611606577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481111561163e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611762576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175990611f9b565b60405180910390fd5b811561182f576000816020019060048111156117a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b908160048111156117e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250507f827ec355ab3f45c3f8c8c87625c3e489f6a448187d3b636e72ca5305a2d9a56d61180f846109d5565b8260400151604051611822929190611f1f565b60405180910390a16118f2565b60038160200190600481111561186e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b908160048111156118a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250507fcb453b91b0305a1bcc1f7d9d126e691dc6b555b1121141dc83a9a0caf327ba8e6118d6846109d5565b82604001516040516118e9929190611f1f565b60405180910390a15b505050565b61271081565b82600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119909190612213565b9250508190555082600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a079190612132565b92505081905550505050565b60405180608001604052806000815260200160006004811115611a5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050611aae8161255d565b92915050565b600081359050611ac381612574565b92915050565b600081359050611ad88161258b565b92915050565b600081359050611aed816125a2565b92915050565b600060208284031215611b0557600080fd5b6000611b1384828501611a9f565b91505092915050565b60008060408385031215611b2f57600080fd5b6000611b3d85828601611a9f565b9250506020611b4e85828601611ade565b9150509250929050565b600060208284031215611b6a57600080fd5b6000611b7884828501611ac9565b91505092915050565b60008060408385031215611b9457600080fd5b6000611ba285828601611ac9565b9250506020611bb385828601611ab4565b9150509250929050565b600060208284031215611bcf57600080fd5b6000611bdd84828501611ade565b91505092915050565b60008060408385031215611bf957600080fd5b6000611c0785828601611ade565b9250506020611c1885828601611a9f565b9150509250929050565b611c2b81612247565b82525050565b611c3a81612247565b82525050565b611c4981612259565b82525050565b611c5881612265565b82525050565b611c67816122b9565b82525050565b611c76816122b9565b82525050565b6000611c8782612116565b611c918185612121565b9350611ca18185602086016122cb565b611caa816123f0565b840191505092915050565b6000611cc2601983612121565b9150611ccd82612401565b602082019050919050565b6000611ce5601e83612121565b9150611cf08261242a565b602082019050919050565b6000611d08601f83612121565b9150611d1382612453565b602082019050919050565b6000611d2b601783612121565b9150611d368261247c565b602082019050919050565b6000611d4e601b83612121565b9150611d59826124a5565b602082019050919050565b6000611d71602083612121565b9150611d7c826124ce565b602082019050919050565b6000611d94601183612121565b9150611d9f826124f7565b602082019050919050565b6000611db7601383612121565b9150611dc282612520565b602082019050919050565b608082016000820151611de36000850182611e22565b506020820151611df66020850182611c5e565b506040820151611e096040850182611c22565b506060820151611e1c6060850182611c22565b50505050565b611e2b816122a2565b82525050565b611e3a816122a2565b82525050565b611e51611e4c826122a2565b612328565b82525050565b6000611e638285611e40565b602082019150611e738284611e40565b6020820191508190509392505050565b6000602082019050611e986000830184611c31565b92915050565b6000604082019050611eb36000830185611c31565b611ec06020830184611e31565b9392505050565b6000602082019050611edc6000830184611c40565b92915050565b6000602082019050611ef76000830184611c4f565b92915050565b60006020820190508181036000830152611f178184611c7c565b905092915050565b60006040820190508181036000830152611f398185611c7c565b9050611f486020830184611c31565b9392505050565b60006080820190508181036000830152611f698187611c7c565b9050611f786020830186611c31565b611f856040830185611c31565b611f926060830184611c40565b95945050505050565b60006020820190508181036000830152611fb481611cb5565b9050919050565b60006020820190508181036000830152611fd481611cd8565b9050919050565b60006020820190508181036000830152611ff481611cfb565b9050919050565b6000602082019050818103600083015261201481611d1e565b9050919050565b6000602082019050818103600083015261203481611d41565b9050919050565b6000602082019050818103600083015261205481611d64565b9050919050565b6000602082019050818103600083015261207481611d87565b9050919050565b6000602082019050818103600083015261209481611daa565b9050919050565b60006080820190506120b06000830184611dcd565b92915050565b60006020820190506120cb6000830184611e31565b92915050565b60006080820190506120e66000830187611e31565b6120f36020830186611c6d565b6121006040830185611c31565b61210d6060830184611c31565b95945050505050565b600081519050919050565b600082825260208201905092915050565b600061213d826122a2565b9150612148836122a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561217d5761217c612363565b5b828201905092915050565b6000612193826122a2565b915061219e836122a2565b9250826121ae576121ad612392565b5b828204905092915050565b60006121c4826122a2565b91506121cf836122a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561220857612207612363565b5b828202905092915050565b600061221e826122a2565b9150612229836122a2565b92508282101561223c5761223b612363565b5b828203905092915050565b600061225282612282565b9050919050565b60008115159050919050565b6000819050919050565b600081905061227d82612549565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006122c48261226f565b9050919050565b60005b838110156122e95780820151818401526020810190506122ce565b838111156122f8576000848401525b50505050565b6000612309826122ac565b915060ff82141561231d5761231c612363565b5b600182019050919050565b6000819050919050565b600061233d826122a2565b9150612348836122a2565b92508261235857612357612392565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c7920706572666f726d65722063616e207265706c792e00000000000000600082015250565b7f4f6e6c79206f776e65722063616e20636f6e6669726d207265776172642e0000600082015250565b7f43616e6e6f742066696e642072657175657374656420636f6e74726163742e00600082015250565b7f4f6e6c79206f776e65722063616e2063616c6c2069742e000000000000000000600082015250565b7f4e4654206275696c6465722063757272656e746c7920627573792e0000000000600082015250565b7f526577617264206d75737420626520686967686572207468656e207a65726f2e600082015250565b7f4e6f7420656e6f7568742066756e64732e000000000000000000000000000000600082015250565b7f496e73756666696369656e742066756e64732e00000000000000000000000000600082015250565b6005811061255a576125596123c1565b5b50565b61256681612247565b811461257157600080fd5b50565b61257d81612259565b811461258857600080fd5b50565b61259481612265565b811461259f57600080fd5b50565b6125ab816122a2565b81146125b657600080fd5b5056fea264697066735822122055050c5a08a4766ebdc854e8113fbe14bfa433468403725ca8994436081b438c64736f6c63430008040033";

export class LaLaVilleEconomyToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LaLaVilleEconomyToken> {
    return super.deploy(
      owner,
      overrides || {}
    ) as Promise<LaLaVilleEconomyToken>;
  }
  getDeployTransaction(
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, overrides || {});
  }
  attach(address: string): LaLaVilleEconomyToken {
    return super.attach(address) as LaLaVilleEconomyToken;
  }
  connect(signer: Signer): LaLaVilleEconomyToken__factory {
    return super.connect(signer) as LaLaVilleEconomyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LaLaVilleEconomyTokenInterface {
    return new utils.Interface(_abi) as LaLaVilleEconomyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LaLaVilleEconomyToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LaLaVilleEconomyToken;
  }
}
